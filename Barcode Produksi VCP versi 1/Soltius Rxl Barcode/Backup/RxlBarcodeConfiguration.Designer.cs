//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Soltius.RetailExcel.Utils.PrintBarcode {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RxlBarcodeConfiguration")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RxlBarcodeConfiguration : global::System.Data.DataSet {
        
        private PrintLabelDataTable tablePrintLabel;
        
        private PrintSettingDataTable tablePrintSetting;
        
        private global::System.Data.DataRelation relationFK_PrintSetting_PrintLabel;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RxlBarcodeConfiguration() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RxlBarcodeConfiguration(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PrintLabel"] != null)) {
                    base.Tables.Add(new PrintLabelDataTable(ds.Tables["PrintLabel"]));
                }
                if ((ds.Tables["PrintSetting"] != null)) {
                    base.Tables.Add(new PrintSettingDataTable(ds.Tables["PrintSetting"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrintLabelDataTable PrintLabel {
            get {
                return this.tablePrintLabel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PrintSettingDataTable PrintSetting {
            get {
                return this.tablePrintSetting;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RxlBarcodeConfiguration cln = ((RxlBarcodeConfiguration)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PrintLabel"] != null)) {
                    base.Tables.Add(new PrintLabelDataTable(ds.Tables["PrintLabel"]));
                }
                if ((ds.Tables["PrintSetting"] != null)) {
                    base.Tables.Add(new PrintSettingDataTable(ds.Tables["PrintSetting"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePrintLabel = ((PrintLabelDataTable)(base.Tables["PrintLabel"]));
            if ((initTable == true)) {
                if ((this.tablePrintLabel != null)) {
                    this.tablePrintLabel.InitVars();
                }
            }
            this.tablePrintSetting = ((PrintSettingDataTable)(base.Tables["PrintSetting"]));
            if ((initTable == true)) {
                if ((this.tablePrintSetting != null)) {
                    this.tablePrintSetting.InitVars();
                }
            }
            this.relationFK_PrintSetting_PrintLabel = this.Relations["FK_PrintSetting_PrintLabel"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RxlBarcodeConfiguration";
            this.Prefix = "";
            this.Namespace = "http://www.soltius.co.id/RxlBlaster2008/RxlBarcodeConfiguration.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePrintLabel = new PrintLabelDataTable();
            base.Tables.Add(this.tablePrintLabel);
            this.tablePrintSetting = new PrintSettingDataTable();
            base.Tables.Add(this.tablePrintSetting);
            this.relationFK_PrintSetting_PrintLabel = new global::System.Data.DataRelation("FK_PrintSetting_PrintLabel", new global::System.Data.DataColumn[] {
                        this.tablePrintLabel.LabelIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePrintSetting.LabelIDColumn}, false);
            this.Relations.Add(this.relationFK_PrintSetting_PrintLabel);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrintLabel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePrintSetting() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RxlBarcodeConfiguration ds = new RxlBarcodeConfiguration();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PrintLabelRowChangeEventHandler(object sender, PrintLabelRowChangeEvent e);
        
        public delegate void PrintSettingRowChangeEventHandler(object sender, PrintSettingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrintLabelDataTable : global::System.Data.TypedTableBase<PrintLabelRow> {
            
            private global::System.Data.DataColumn columnLabelID;
            
            private global::System.Data.DataColumn columnLabelDescription;
            
            private global::System.Data.DataColumn columnLabelWidth;
            
            private global::System.Data.DataColumn columnLabelHeight;
            
            private global::System.Data.DataColumn columnLabelColumnSpace;
            
            private global::System.Data.DataColumn columnLabelRowSpace;
            
            private global::System.Data.DataColumn columnLabelTopMargin;
            
            private global::System.Data.DataColumn columnLabelBottomMargin;
            
            private global::System.Data.DataColumn columnLabelLeftMargin;
            
            private global::System.Data.DataColumn columnLabelRightMargin;
            
            private global::System.Data.DataColumn columnPageTopMargin;
            
            private global::System.Data.DataColumn columnPageBottomMargin;
            
            private global::System.Data.DataColumn columnPageLeftMargin;
            
            private global::System.Data.DataColumn columnPageRightMargin;
            
            private global::System.Data.DataColumn columnPageOrientation;
            
            private global::System.Data.DataColumn columnPaperWidth;
            
            private global::System.Data.DataColumn columnPaperHeight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelDataTable() {
                this.TableName = "PrintLabel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrintLabelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PrintLabelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelIDColumn {
                get {
                    return this.columnLabelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelDescriptionColumn {
                get {
                    return this.columnLabelDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelWidthColumn {
                get {
                    return this.columnLabelWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelHeightColumn {
                get {
                    return this.columnLabelHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelColumnSpaceColumn {
                get {
                    return this.columnLabelColumnSpace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelRowSpaceColumn {
                get {
                    return this.columnLabelRowSpace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelTopMarginColumn {
                get {
                    return this.columnLabelTopMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelBottomMarginColumn {
                get {
                    return this.columnLabelBottomMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelLeftMarginColumn {
                get {
                    return this.columnLabelLeftMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelRightMarginColumn {
                get {
                    return this.columnLabelRightMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageTopMarginColumn {
                get {
                    return this.columnPageTopMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageBottomMarginColumn {
                get {
                    return this.columnPageBottomMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageLeftMarginColumn {
                get {
                    return this.columnPageLeftMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageRightMarginColumn {
                get {
                    return this.columnPageRightMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageOrientationColumn {
                get {
                    return this.columnPageOrientation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaperWidthColumn {
                get {
                    return this.columnPaperWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaperHeightColumn {
                get {
                    return this.columnPaperHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRow this[int index] {
                get {
                    return ((PrintLabelRow)(this.Rows[index]));
                }
            }
            
            public event PrintLabelRowChangeEventHandler PrintLabelRowChanging;
            
            public event PrintLabelRowChangeEventHandler PrintLabelRowChanged;
            
            public event PrintLabelRowChangeEventHandler PrintLabelRowDeleting;
            
            public event PrintLabelRowChangeEventHandler PrintLabelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrintLabelRow(PrintLabelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRow AddPrintLabelRow(
                        string LabelDescription, 
                        decimal LabelWidth, 
                        decimal LabelHeight, 
                        decimal LabelColumnSpace, 
                        decimal LabelRowSpace, 
                        decimal LabelTopMargin, 
                        decimal LabelBottomMargin, 
                        decimal LabelLeftMargin, 
                        decimal LabelRightMargin, 
                        decimal PageTopMargin, 
                        decimal PageBottomMargin, 
                        decimal PageLeftMargin, 
                        decimal PageRightMargin, 
                        string PageOrientation, 
                        decimal PaperWidth, 
                        decimal PaperHeight) {
                PrintLabelRow rowPrintLabelRow = ((PrintLabelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LabelDescription,
                        LabelWidth,
                        LabelHeight,
                        LabelColumnSpace,
                        LabelRowSpace,
                        LabelTopMargin,
                        LabelBottomMargin,
                        LabelLeftMargin,
                        LabelRightMargin,
                        PageTopMargin,
                        PageBottomMargin,
                        PageLeftMargin,
                        PageRightMargin,
                        PageOrientation,
                        PaperWidth,
                        PaperHeight};
                rowPrintLabelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrintLabelRow);
                return rowPrintLabelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRow FindByLabelID(int LabelID) {
                return ((PrintLabelRow)(this.Rows.Find(new object[] {
                            LabelID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PrintLabelDataTable cln = ((PrintLabelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PrintLabelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLabelID = base.Columns["LabelID"];
                this.columnLabelDescription = base.Columns["LabelDescription"];
                this.columnLabelWidth = base.Columns["LabelWidth"];
                this.columnLabelHeight = base.Columns["LabelHeight"];
                this.columnLabelColumnSpace = base.Columns["LabelColumnSpace"];
                this.columnLabelRowSpace = base.Columns["LabelRowSpace"];
                this.columnLabelTopMargin = base.Columns["LabelTopMargin"];
                this.columnLabelBottomMargin = base.Columns["LabelBottomMargin"];
                this.columnLabelLeftMargin = base.Columns["LabelLeftMargin"];
                this.columnLabelRightMargin = base.Columns["LabelRightMargin"];
                this.columnPageTopMargin = base.Columns["PageTopMargin"];
                this.columnPageBottomMargin = base.Columns["PageBottomMargin"];
                this.columnPageLeftMargin = base.Columns["PageLeftMargin"];
                this.columnPageRightMargin = base.Columns["PageRightMargin"];
                this.columnPageOrientation = base.Columns["PageOrientation"];
                this.columnPaperWidth = base.Columns["PaperWidth"];
                this.columnPaperHeight = base.Columns["PaperHeight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLabelID = new global::System.Data.DataColumn("LabelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelID);
                this.columnLabelDescription = new global::System.Data.DataColumn("LabelDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelDescription);
                this.columnLabelWidth = new global::System.Data.DataColumn("LabelWidth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelWidth);
                this.columnLabelHeight = new global::System.Data.DataColumn("LabelHeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelHeight);
                this.columnLabelColumnSpace = new global::System.Data.DataColumn("LabelColumnSpace", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelColumnSpace);
                this.columnLabelRowSpace = new global::System.Data.DataColumn("LabelRowSpace", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelRowSpace);
                this.columnLabelTopMargin = new global::System.Data.DataColumn("LabelTopMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelTopMargin);
                this.columnLabelBottomMargin = new global::System.Data.DataColumn("LabelBottomMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelBottomMargin);
                this.columnLabelLeftMargin = new global::System.Data.DataColumn("LabelLeftMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelLeftMargin);
                this.columnLabelRightMargin = new global::System.Data.DataColumn("LabelRightMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelRightMargin);
                this.columnPageTopMargin = new global::System.Data.DataColumn("PageTopMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageTopMargin);
                this.columnPageBottomMargin = new global::System.Data.DataColumn("PageBottomMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageBottomMargin);
                this.columnPageLeftMargin = new global::System.Data.DataColumn("PageLeftMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageLeftMargin);
                this.columnPageRightMargin = new global::System.Data.DataColumn("PageRightMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageRightMargin);
                this.columnPageOrientation = new global::System.Data.DataColumn("PageOrientation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageOrientation);
                this.columnPaperWidth = new global::System.Data.DataColumn("PaperWidth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperWidth);
                this.columnPaperHeight = new global::System.Data.DataColumn("PaperHeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperHeight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_PrintLabel", new global::System.Data.DataColumn[] {
                                this.columnLabelID}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLabelDescription}, false));
                this.columnLabelID.AutoIncrement = true;
                this.columnLabelID.AutoIncrementSeed = 1;
                this.columnLabelID.AllowDBNull = false;
                this.columnLabelID.Unique = true;
                this.columnLabelDescription.AllowDBNull = false;
                this.columnLabelDescription.Unique = true;
                this.columnLabelDescription.DefaultValue = ((string)(""));
                this.columnLabelWidth.AllowDBNull = false;
                this.columnLabelWidth.DefaultValue = ((decimal)(0m));
                this.columnLabelHeight.AllowDBNull = false;
                this.columnLabelHeight.DefaultValue = ((decimal)(0m));
                this.columnLabelColumnSpace.AllowDBNull = false;
                this.columnLabelColumnSpace.DefaultValue = ((decimal)(0m));
                this.columnLabelRowSpace.AllowDBNull = false;
                this.columnLabelRowSpace.DefaultValue = ((decimal)(0m));
                this.columnLabelTopMargin.AllowDBNull = false;
                this.columnLabelTopMargin.DefaultValue = ((decimal)(0m));
                this.columnLabelBottomMargin.AllowDBNull = false;
                this.columnLabelBottomMargin.DefaultValue = ((decimal)(0m));
                this.columnLabelLeftMargin.AllowDBNull = false;
                this.columnLabelLeftMargin.DefaultValue = ((decimal)(5m));
                this.columnLabelRightMargin.AllowDBNull = false;
                this.columnLabelRightMargin.DefaultValue = ((decimal)(5m));
                this.columnPageTopMargin.AllowDBNull = false;
                this.columnPageTopMargin.DefaultValue = ((decimal)(0m));
                this.columnPageBottomMargin.AllowDBNull = false;
                this.columnPageBottomMargin.DefaultValue = ((decimal)(0m));
                this.columnPageLeftMargin.AllowDBNull = false;
                this.columnPageLeftMargin.DefaultValue = ((decimal)(0m));
                this.columnPageRightMargin.AllowDBNull = false;
                this.columnPageRightMargin.DefaultValue = ((decimal)(0m));
                this.columnPageOrientation.AllowDBNull = false;
                this.columnPageOrientation.DefaultValue = ((string)("False"));
                this.columnPaperWidth.AllowDBNull = false;
                this.columnPaperWidth.DefaultValue = ((decimal)(0m));
                this.columnPaperHeight.AllowDBNull = false;
                this.columnPaperHeight.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRow NewPrintLabelRow() {
                return ((PrintLabelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PrintLabelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PrintLabelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PrintLabelRowChanged != null)) {
                    this.PrintLabelRowChanged(this, new PrintLabelRowChangeEvent(((PrintLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PrintLabelRowChanging != null)) {
                    this.PrintLabelRowChanging(this, new PrintLabelRowChangeEvent(((PrintLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PrintLabelRowDeleted != null)) {
                    this.PrintLabelRowDeleted(this, new PrintLabelRowChangeEvent(((PrintLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PrintLabelRowDeleting != null)) {
                    this.PrintLabelRowDeleting(this, new PrintLabelRowChangeEvent(((PrintLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrintLabelRow(PrintLabelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RxlBarcodeConfiguration ds = new RxlBarcodeConfiguration();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrintLabelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PrintSettingDataTable : global::System.Data.TypedTableBase<PrintSettingRow> {
            
            private global::System.Data.DataColumn columnSettingCode;
            
            private global::System.Data.DataColumn columnPrinterName;
            
            private global::System.Data.DataColumn columnPrintStartRow;
            
            private global::System.Data.DataColumn columnPrintStartColumn;
            
            private global::System.Data.DataColumn columnBarcodeType;
            
            private global::System.Data.DataColumn columnShowTopText;
            
            private global::System.Data.DataColumn columnTopTextFontStyle;
            
            private global::System.Data.DataColumn columnTopTextType;
            
            private global::System.Data.DataColumn columnShowBottomText;
            
            private global::System.Data.DataColumn columnBottomTextFontStyle;
            
            private global::System.Data.DataColumn columnBottomTextType;
            
            private global::System.Data.DataColumn columnBarcodeWidthScale;
            
            private global::System.Data.DataColumn columnBarcodeHeightScale;
            
            private global::System.Data.DataColumn columnLabelID;
            
            private global::System.Data.DataColumn columnShowPrcPrnText;
            
            private global::System.Data.DataColumn columnPrcPrnTextFontStyle;
            
            private global::System.Data.DataColumn columnPrcPrnTextType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingDataTable() {
                this.TableName = "PrintSetting";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrintSettingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PrintSettingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SettingCodeColumn {
                get {
                    return this.columnSettingCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrinterNameColumn {
                get {
                    return this.columnPrinterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintStartRowColumn {
                get {
                    return this.columnPrintStartRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintStartColumnColumn {
                get {
                    return this.columnPrintStartColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeTypeColumn {
                get {
                    return this.columnBarcodeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowTopTextColumn {
                get {
                    return this.columnShowTopText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopTextFontStyleColumn {
                get {
                    return this.columnTopTextFontStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TopTextTypeColumn {
                get {
                    return this.columnTopTextType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowBottomTextColumn {
                get {
                    return this.columnShowBottomText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BottomTextFontStyleColumn {
                get {
                    return this.columnBottomTextFontStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BottomTextTypeColumn {
                get {
                    return this.columnBottomTextType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeWidthScaleColumn {
                get {
                    return this.columnBarcodeWidthScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeHeightScaleColumn {
                get {
                    return this.columnBarcodeHeightScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabelIDColumn {
                get {
                    return this.columnLabelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowPrcPrnTextColumn {
                get {
                    return this.columnShowPrcPrnText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrcPrnTextFontStyleColumn {
                get {
                    return this.columnPrcPrnTextFontStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrcPrnTextTypeColumn {
                get {
                    return this.columnPrcPrnTextType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRow this[int index] {
                get {
                    return ((PrintSettingRow)(this.Rows[index]));
                }
            }
            
            public event PrintSettingRowChangeEventHandler PrintSettingRowChanging;
            
            public event PrintSettingRowChangeEventHandler PrintSettingRowChanged;
            
            public event PrintSettingRowChangeEventHandler PrintSettingRowDeleting;
            
            public event PrintSettingRowChangeEventHandler PrintSettingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPrintSettingRow(PrintSettingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRow AddPrintSettingRow(
                        string SettingCode, 
                        string PrinterName, 
                        int PrintStartRow, 
                        int PrintStartColumn, 
                        string BarcodeType, 
                        bool ShowTopText, 
                        string TopTextFontStyle, 
                        string TopTextType, 
                        bool ShowBottomText, 
                        string BottomTextFontStyle, 
                        string BottomTextType, 
                        decimal BarcodeWidthScale, 
                        decimal BarcodeHeightScale, 
                        PrintLabelRow parentPrintLabelRowByFK_PrintSetting_PrintLabel, 
                        bool ShowPrcPrnText, 
                        string PrcPrnTextFontStyle, 
                        string PrcPrnTextType) {
                PrintSettingRow rowPrintSettingRow = ((PrintSettingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SettingCode,
                        PrinterName,
                        PrintStartRow,
                        PrintStartColumn,
                        BarcodeType,
                        ShowTopText,
                        TopTextFontStyle,
                        TopTextType,
                        ShowBottomText,
                        BottomTextFontStyle,
                        BottomTextType,
                        BarcodeWidthScale,
                        BarcodeHeightScale,
                        null,
                        ShowPrcPrnText,
                        PrcPrnTextFontStyle,
                        PrcPrnTextType};
                if ((parentPrintLabelRowByFK_PrintSetting_PrintLabel != null)) {
                    columnValuesArray[13] = parentPrintLabelRowByFK_PrintSetting_PrintLabel[0];
                }
                rowPrintSettingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPrintSettingRow);
                return rowPrintSettingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRow FindBySettingCode(string SettingCode) {
                return ((PrintSettingRow)(this.Rows.Find(new object[] {
                            SettingCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PrintSettingDataTable cln = ((PrintSettingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PrintSettingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSettingCode = base.Columns["SettingCode"];
                this.columnPrinterName = base.Columns["PrinterName"];
                this.columnPrintStartRow = base.Columns["PrintStartRow"];
                this.columnPrintStartColumn = base.Columns["PrintStartColumn"];
                this.columnBarcodeType = base.Columns["BarcodeType"];
                this.columnShowTopText = base.Columns["ShowTopText"];
                this.columnTopTextFontStyle = base.Columns["TopTextFontStyle"];
                this.columnTopTextType = base.Columns["TopTextType"];
                this.columnShowBottomText = base.Columns["ShowBottomText"];
                this.columnBottomTextFontStyle = base.Columns["BottomTextFontStyle"];
                this.columnBottomTextType = base.Columns["BottomTextType"];
                this.columnBarcodeWidthScale = base.Columns["BarcodeWidthScale"];
                this.columnBarcodeHeightScale = base.Columns["BarcodeHeightScale"];
                this.columnLabelID = base.Columns["LabelID"];
                this.columnShowPrcPrnText = base.Columns["ShowPrcPrnText"];
                this.columnPrcPrnTextFontStyle = base.Columns["PrcPrnTextFontStyle"];
                this.columnPrcPrnTextType = base.Columns["PrcPrnTextType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSettingCode = new global::System.Data.DataColumn("SettingCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettingCode);
                this.columnPrinterName = new global::System.Data.DataColumn("PrinterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrinterName);
                this.columnPrintStartRow = new global::System.Data.DataColumn("PrintStartRow", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintStartRow);
                this.columnPrintStartColumn = new global::System.Data.DataColumn("PrintStartColumn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintStartColumn);
                this.columnBarcodeType = new global::System.Data.DataColumn("BarcodeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcodeType);
                this.columnShowTopText = new global::System.Data.DataColumn("ShowTopText", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowTopText);
                this.columnTopTextFontStyle = new global::System.Data.DataColumn("TopTextFontStyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopTextFontStyle);
                this.columnTopTextType = new global::System.Data.DataColumn("TopTextType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopTextType);
                this.columnShowBottomText = new global::System.Data.DataColumn("ShowBottomText", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowBottomText);
                this.columnBottomTextFontStyle = new global::System.Data.DataColumn("BottomTextFontStyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBottomTextFontStyle);
                this.columnBottomTextType = new global::System.Data.DataColumn("BottomTextType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBottomTextType);
                this.columnBarcodeWidthScale = new global::System.Data.DataColumn("BarcodeWidthScale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcodeWidthScale);
                this.columnBarcodeHeightScale = new global::System.Data.DataColumn("BarcodeHeightScale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcodeHeightScale);
                this.columnLabelID = new global::System.Data.DataColumn("LabelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelID);
                this.columnShowPrcPrnText = new global::System.Data.DataColumn("ShowPrcPrnText", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowPrcPrnText);
                this.columnPrcPrnTextFontStyle = new global::System.Data.DataColumn("PrcPrnTextFontStyle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrcPrnTextFontStyle);
                this.columnPrcPrnTextType = new global::System.Data.DataColumn("PrcPrnTextType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrcPrnTextType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_PrintSetting", new global::System.Data.DataColumn[] {
                                this.columnSettingCode}, true));
                this.columnSettingCode.AutoIncrementSeed = -1;
                this.columnSettingCode.AutoIncrementStep = -1;
                this.columnSettingCode.AllowDBNull = false;
                this.columnSettingCode.Unique = true;
                this.columnSettingCode.DefaultValue = ((string)("Default"));
                this.columnPrinterName.DefaultValue = ((string)("DefaultPrinter"));
                this.columnPrintStartRow.AllowDBNull = false;
                this.columnPrintStartRow.DefaultValue = ((int)(1));
                this.columnPrintStartColumn.AllowDBNull = false;
                this.columnPrintStartColumn.DefaultValue = ((int)(1));
                this.columnBarcodeType.AllowDBNull = false;
                this.columnBarcodeType.DefaultValue = ((string)("Code39"));
                this.columnShowTopText.AllowDBNull = false;
                this.columnShowTopText.DefaultValue = ((bool)(true));
                this.columnTopTextFontStyle.AllowDBNull = false;
                this.columnTopTextFontStyle.DefaultValue = ((string)("Courier New, 8.25pt"));
                this.columnTopTextType.AllowDBNull = false;
                this.columnTopTextType.DefaultValue = ((string)("ItemName"));
                this.columnShowBottomText.AllowDBNull = false;
                this.columnShowBottomText.DefaultValue = ((bool)(true));
                this.columnBottomTextFontStyle.AllowDBNull = false;
                this.columnBottomTextFontStyle.DefaultValue = ((string)("Courier New, 8.25pt"));
                this.columnBottomTextType.AllowDBNull = false;
                this.columnBottomTextType.DefaultValue = ((string)("ItemCode"));
                this.columnBarcodeWidthScale.AllowDBNull = false;
                this.columnBarcodeWidthScale.DefaultValue = ((decimal)(100m));
                this.columnBarcodeHeightScale.AllowDBNull = false;
                this.columnBarcodeHeightScale.DefaultValue = ((decimal)(100m));
                this.columnLabelID.AllowDBNull = false;
                this.columnLabelID.DefaultValue = ((int)(1));
                this.columnShowPrcPrnText.AllowDBNull = false;
                this.columnShowPrcPrnText.DefaultValue = ((bool)(true));
                this.columnPrcPrnTextFontStyle.AllowDBNull = false;
                this.columnPrcPrnTextFontStyle.DefaultValue = ((string)("Courier New, 8.25pt"));
                this.columnPrcPrnTextType.AllowDBNull = false;
                this.columnPrcPrnTextType.DefaultValue = ((string)("SellPrice"));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRow NewPrintSettingRow() {
                return ((PrintSettingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PrintSettingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PrintSettingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PrintSettingRowChanged != null)) {
                    this.PrintSettingRowChanged(this, new PrintSettingRowChangeEvent(((PrintSettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PrintSettingRowChanging != null)) {
                    this.PrintSettingRowChanging(this, new PrintSettingRowChangeEvent(((PrintSettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PrintSettingRowDeleted != null)) {
                    this.PrintSettingRowDeleted(this, new PrintSettingRowChangeEvent(((PrintSettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PrintSettingRowDeleting != null)) {
                    this.PrintSettingRowDeleting(this, new PrintSettingRowChangeEvent(((PrintSettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePrintSettingRow(PrintSettingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RxlBarcodeConfiguration ds = new RxlBarcodeConfiguration();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PrintSettingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PrintLabelRow : global::System.Data.DataRow {
            
            private PrintLabelDataTable tablePrintLabel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrintLabelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrintLabel = ((PrintLabelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LabelID {
                get {
                    return ((int)(this[this.tablePrintLabel.LabelIDColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabelDescription {
                get {
                    return ((string)(this[this.tablePrintLabel.LabelDescriptionColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelWidth {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelWidthColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelHeight {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelHeightColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelColumnSpace {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelColumnSpaceColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelColumnSpaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelRowSpace {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelRowSpaceColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelRowSpaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelTopMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelTopMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelTopMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelBottomMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelBottomMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelBottomMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelLeftMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelLeftMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelLeftMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LabelRightMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.LabelRightMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.LabelRightMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PageTopMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.PageTopMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.PageTopMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PageBottomMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.PageBottomMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.PageBottomMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PageLeftMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.PageLeftMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.PageLeftMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PageRightMargin {
                get {
                    return ((decimal)(this[this.tablePrintLabel.PageRightMarginColumn]));
                }
                set {
                    this[this.tablePrintLabel.PageRightMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PageOrientation {
                get {
                    return ((string)(this[this.tablePrintLabel.PageOrientationColumn]));
                }
                set {
                    this[this.tablePrintLabel.PageOrientationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaperWidth {
                get {
                    return ((decimal)(this[this.tablePrintLabel.PaperWidthColumn]));
                }
                set {
                    this[this.tablePrintLabel.PaperWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaperHeight {
                get {
                    return ((decimal)(this[this.tablePrintLabel.PaperHeightColumn]));
                }
                set {
                    this[this.tablePrintLabel.PaperHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRow[] GetPrintSettingRows() {
                if ((this.Table.ChildRelations["FK_PrintSetting_PrintLabel"] == null)) {
                    return new PrintSettingRow[0];
                }
                else {
                    return ((PrintSettingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PrintSetting_PrintLabel"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PrintSettingRow : global::System.Data.DataRow {
            
            private PrintSettingDataTable tablePrintSetting;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PrintSettingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePrintSetting = ((PrintSettingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SettingCode {
                get {
                    return ((string)(this[this.tablePrintSetting.SettingCodeColumn]));
                }
                set {
                    this[this.tablePrintSetting.SettingCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrinterName {
                get {
                    try {
                        return ((string)(this[this.tablePrintSetting.PrinterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrinterName\' in table \'PrintSetting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePrintSetting.PrinterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrintStartRow {
                get {
                    return ((int)(this[this.tablePrintSetting.PrintStartRowColumn]));
                }
                set {
                    this[this.tablePrintSetting.PrintStartRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrintStartColumn {
                get {
                    return ((int)(this[this.tablePrintSetting.PrintStartColumnColumn]));
                }
                set {
                    this[this.tablePrintSetting.PrintStartColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BarcodeType {
                get {
                    return ((string)(this[this.tablePrintSetting.BarcodeTypeColumn]));
                }
                set {
                    this[this.tablePrintSetting.BarcodeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ShowTopText {
                get {
                    return ((bool)(this[this.tablePrintSetting.ShowTopTextColumn]));
                }
                set {
                    this[this.tablePrintSetting.ShowTopTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopTextFontStyle {
                get {
                    return ((string)(this[this.tablePrintSetting.TopTextFontStyleColumn]));
                }
                set {
                    this[this.tablePrintSetting.TopTextFontStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TopTextType {
                get {
                    return ((string)(this[this.tablePrintSetting.TopTextTypeColumn]));
                }
                set {
                    this[this.tablePrintSetting.TopTextTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ShowBottomText {
                get {
                    return ((bool)(this[this.tablePrintSetting.ShowBottomTextColumn]));
                }
                set {
                    this[this.tablePrintSetting.ShowBottomTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BottomTextFontStyle {
                get {
                    return ((string)(this[this.tablePrintSetting.BottomTextFontStyleColumn]));
                }
                set {
                    this[this.tablePrintSetting.BottomTextFontStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BottomTextType {
                get {
                    return ((string)(this[this.tablePrintSetting.BottomTextTypeColumn]));
                }
                set {
                    this[this.tablePrintSetting.BottomTextTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BarcodeWidthScale {
                get {
                    return ((decimal)(this[this.tablePrintSetting.BarcodeWidthScaleColumn]));
                }
                set {
                    this[this.tablePrintSetting.BarcodeWidthScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BarcodeHeightScale {
                get {
                    return ((decimal)(this[this.tablePrintSetting.BarcodeHeightScaleColumn]));
                }
                set {
                    this[this.tablePrintSetting.BarcodeHeightScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LabelID {
                get {
                    return ((int)(this[this.tablePrintSetting.LabelIDColumn]));
                }
                set {
                    this[this.tablePrintSetting.LabelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ShowPrcPrnText {
                get {
                    return ((bool)(this[this.tablePrintSetting.ShowPrcPrnTextColumn]));
                }
                set {
                    this[this.tablePrintSetting.ShowPrcPrnTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrcPrnTextFontStyle {
                get {
                    return ((string)(this[this.tablePrintSetting.PrcPrnTextFontStyleColumn]));
                }
                set {
                    this[this.tablePrintSetting.PrcPrnTextFontStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrcPrnTextType {
                get {
                    return ((string)(this[this.tablePrintSetting.PrcPrnTextTypeColumn]));
                }
                set {
                    this[this.tablePrintSetting.PrcPrnTextTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRow PrintLabelRow {
                get {
                    return ((PrintLabelRow)(this.GetParentRow(this.Table.ParentRelations["FK_PrintSetting_PrintLabel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PrintSetting_PrintLabel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrinterNameNull() {
                return this.IsNull(this.tablePrintSetting.PrinterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrinterNameNull() {
                this[this.tablePrintSetting.PrinterNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PrintLabelRowChangeEvent : global::System.EventArgs {
            
            private PrintLabelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRowChangeEvent(PrintLabelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintLabelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PrintSettingRowChangeEvent : global::System.EventArgs {
            
            private PrintSettingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRowChangeEvent(PrintSettingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PrintSettingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591