//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Soltius.RetailExcel.Utils.PrintBarcode {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsShoesBarcodePrinting")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsShoesBarcodePrinting : global::System.Data.DataSet {
        
        private ItemMasterDataTable tableItemMaster;
        
        private DeliveryNoteDataTable tableDeliveryNote;
        
        private PurchaseOrderDataTable tablePurchaseOrder;
        
        private GRNDataTable tableGRN;
        
        private ItemDetailDataTable tableItemDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsShoesBarcodePrinting() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsShoesBarcodePrinting(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ItemMaster"] != null)) {
                    base.Tables.Add(new ItemMasterDataTable(ds.Tables["ItemMaster"]));
                }
                if ((ds.Tables["DeliveryNote"] != null)) {
                    base.Tables.Add(new DeliveryNoteDataTable(ds.Tables["DeliveryNote"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["GRN"] != null)) {
                    base.Tables.Add(new GRNDataTable(ds.Tables["GRN"]));
                }
                if ((ds.Tables["ItemDetail"] != null)) {
                    base.Tables.Add(new ItemDetailDataTable(ds.Tables["ItemDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemMasterDataTable ItemMaster {
            get {
                return this.tableItemMaster;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeliveryNoteDataTable DeliveryNote {
            get {
                return this.tableDeliveryNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderDataTable PurchaseOrder {
            get {
                return this.tablePurchaseOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GRNDataTable GRN {
            get {
                return this.tableGRN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemDetailDataTable ItemDetail {
            get {
                return this.tableItemDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsShoesBarcodePrinting cln = ((dsShoesBarcodePrinting)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ItemMaster"] != null)) {
                    base.Tables.Add(new ItemMasterDataTable(ds.Tables["ItemMaster"]));
                }
                if ((ds.Tables["DeliveryNote"] != null)) {
                    base.Tables.Add(new DeliveryNoteDataTable(ds.Tables["DeliveryNote"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["GRN"] != null)) {
                    base.Tables.Add(new GRNDataTable(ds.Tables["GRN"]));
                }
                if ((ds.Tables["ItemDetail"] != null)) {
                    base.Tables.Add(new ItemDetailDataTable(ds.Tables["ItemDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableItemMaster = ((ItemMasterDataTable)(base.Tables["ItemMaster"]));
            if ((initTable == true)) {
                if ((this.tableItemMaster != null)) {
                    this.tableItemMaster.InitVars();
                }
            }
            this.tableDeliveryNote = ((DeliveryNoteDataTable)(base.Tables["DeliveryNote"]));
            if ((initTable == true)) {
                if ((this.tableDeliveryNote != null)) {
                    this.tableDeliveryNote.InitVars();
                }
            }
            this.tablePurchaseOrder = ((PurchaseOrderDataTable)(base.Tables["PurchaseOrder"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrder != null)) {
                    this.tablePurchaseOrder.InitVars();
                }
            }
            this.tableGRN = ((GRNDataTable)(base.Tables["GRN"]));
            if ((initTable == true)) {
                if ((this.tableGRN != null)) {
                    this.tableGRN.InitVars();
                }
            }
            this.tableItemDetail = ((ItemDetailDataTable)(base.Tables["ItemDetail"]));
            if ((initTable == true)) {
                if ((this.tableItemDetail != null)) {
                    this.tableItemDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsShoesBarcodePrinting";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsShoesBarcodePrinting.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableItemMaster = new ItemMasterDataTable();
            base.Tables.Add(this.tableItemMaster);
            this.tableDeliveryNote = new DeliveryNoteDataTable();
            base.Tables.Add(this.tableDeliveryNote);
            this.tablePurchaseOrder = new PurchaseOrderDataTable();
            base.Tables.Add(this.tablePurchaseOrder);
            this.tableGRN = new GRNDataTable();
            base.Tables.Add(this.tableGRN);
            this.tableItemDetail = new ItemDetailDataTable();
            base.Tables.Add(this.tableItemDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemMaster() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeliveryNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGRN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsShoesBarcodePrinting ds = new dsShoesBarcodePrinting();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ItemMasterRowChangeEventHandler(object sender, ItemMasterRowChangeEvent e);
        
        public delegate void DeliveryNoteRowChangeEventHandler(object sender, DeliveryNoteRowChangeEvent e);
        
        public delegate void PurchaseOrderRowChangeEventHandler(object sender, PurchaseOrderRowChangeEvent e);
        
        public delegate void GRNRowChangeEventHandler(object sender, GRNRowChangeEvent e);
        
        public delegate void ItemDetailRowChangeEventHandler(object sender, ItemDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemMasterDataTable : global::System.Data.TypedTableBase<ItemMasterRow> {
            
            private global::System.Data.DataColumn columnDivision;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnStyle;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnSizeRange;
            
            private global::System.Data.DataColumn columnSellPrice;
            
            private global::System.Data.DataColumn columnPrintDate;

            private global::System.Data.DataColumn columnMadeFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemMasterDataTable() {
                this.TableName = "ItemMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemMasterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemMasterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionColumn {
                get {
                    return this.columnDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StyleColumn {
                get {
                    return this.columnStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeRangeColumn {
                get {
                    return this.columnSizeRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellPriceColumn {
                get {
                    return this.columnSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateColumn {
                get {
                    return this.columnPrintDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MadeFromColumn
            {
                get
                {
                    return this.columnMadeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemMasterRow this[int index] {
                get {
                    return ((ItemMasterRow)(this.Rows[index]));
                }
            }
            
            public event ItemMasterRowChangeEventHandler ItemMasterRowChanging;
            
            public event ItemMasterRowChangeEventHandler ItemMasterRowChanged;
            
            public event ItemMasterRowChangeEventHandler ItemMasterRowDeleting;
            
            public event ItemMasterRowChangeEventHandler ItemMasterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemMasterRow(ItemMasterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemMasterRow AddItemMasterRow(string Division, string ItemCode, string ItemName, string Brand, string Style, string Color, string Size, string SizeRange, string SellPrice, System.DateTime PrintDate, string MadeFrom) {
                ItemMasterRow rowItemMasterRow = ((ItemMasterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Division,
                        ItemCode,
                        ItemName,
                        Brand,
                        Style,
                        Color,
                        Size,
                        SizeRange,
                        SellPrice,
                        PrintDate,
                        MadeFrom};
                rowItemMasterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemMasterRow);
                return rowItemMasterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemMasterDataTable cln = ((ItemMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemMasterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDivision = base.Columns["Division"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnBrand = base.Columns["Brand"];
                this.columnStyle = base.Columns["Style"];
                this.columnColor = base.Columns["Color"];
                this.columnSize = base.Columns["Size"];
                this.columnSizeRange = base.Columns["SizeRange"];
                this.columnSellPrice = base.Columns["SellPrice"];
                this.columnPrintDate = base.Columns["PrintDate"];
                this.columnMadeFrom = base.Columns["MadeFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDivision = new global::System.Data.DataColumn("Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnStyle = new global::System.Data.DataColumn("Style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnSizeRange = new global::System.Data.DataColumn("SizeRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeRange);
                this.columnSellPrice = new global::System.Data.DataColumn("SellPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellPrice);
                this.columnPrintDate = new global::System.Data.DataColumn("PrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDate);
                this.columnMadeFrom = new global::System.Data.DataColumn("MadeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMadeFrom);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemMasterRow NewItemMasterRow() {
                return ((ItemMasterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemMasterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemMasterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemMasterRowChanged != null)) {
                    this.ItemMasterRowChanged(this, new ItemMasterRowChangeEvent(((ItemMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemMasterRowChanging != null)) {
                    this.ItemMasterRowChanging(this, new ItemMasterRowChangeEvent(((ItemMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemMasterRowDeleted != null)) {
                    this.ItemMasterRowDeleted(this, new ItemMasterRowChangeEvent(((ItemMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemMasterRowDeleting != null)) {
                    this.ItemMasterRowDeleting(this, new ItemMasterRowChangeEvent(((ItemMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemMasterRow(ItemMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsShoesBarcodePrinting ds = new dsShoesBarcodePrinting();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeliveryNoteDataTable : global::System.Data.TypedTableBase<DeliveryNoteRow> {
            
            private global::System.Data.DataColumn columnDNDocNo;
            
            private global::System.Data.DataColumn columnDNDate;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnStyle;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnSizeRange;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSellPrice;
            
            private global::System.Data.DataColumn columnPrintDate;

            private global::System.Data.DataColumn columnMadeFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryNoteDataTable() {
                this.TableName = "DeliveryNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeliveryNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNDocNoColumn {
                get {
                    return this.columnDNDocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNDateColumn {
                get {
                    return this.columnDNDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StyleColumn {
                get {
                    return this.columnStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeRangeColumn {
                get {
                    return this.columnSizeRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellPriceColumn {
                get {
                    return this.columnSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateColumn {
                get {
                    return this.columnPrintDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MadeFromColumn
            {
                get
                {
                    return this.columnMadeFrom;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryNoteRow this[int index] {
                get {
                    return ((DeliveryNoteRow)(this.Rows[index]));
                }
            }
            
            public event DeliveryNoteRowChangeEventHandler DeliveryNoteRowChanging;
            
            public event DeliveryNoteRowChangeEventHandler DeliveryNoteRowChanged;
            
            public event DeliveryNoteRowChangeEventHandler DeliveryNoteRowDeleting;
            
            public event DeliveryNoteRowChangeEventHandler DeliveryNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeliveryNoteRow(DeliveryNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryNoteRow AddDeliveryNoteRow(string DNDocNo, System.DateTime DNDate, string ItemCode, string ItemName, string Brand, string Style, string Color, string Size, string SizeRange, string Qty, string SellPrice, System.DateTime PrintDate, string MadeFrom) {
                DeliveryNoteRow rowDeliveryNoteRow = ((DeliveryNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DNDocNo,
                        DNDate,
                        ItemCode,
                        ItemName,
                        Brand,
                        Style,
                        Color,
                        Size,
                        SizeRange,
                        Qty,
                        SellPrice,
                        PrintDate,
                        MadeFrom};
                rowDeliveryNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDeliveryNoteRow);
                return rowDeliveryNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DeliveryNoteDataTable cln = ((DeliveryNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DeliveryNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDNDocNo = base.Columns["DNDocNo"];
                this.columnDNDate = base.Columns["DNDate"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnBrand = base.Columns["Brand"];
                this.columnStyle = base.Columns["Style"];
                this.columnColor = base.Columns["Color"];
                this.columnSize = base.Columns["Size"];
                this.columnSizeRange = base.Columns["SizeRange"];
                this.columnQty = base.Columns["Qty"];
                this.columnSellPrice = base.Columns["SellPrice"];
                this.columnPrintDate = base.Columns["PrintDate"];
                this.columnMadeFrom = base.Columns["MadeFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDNDocNo = new global::System.Data.DataColumn("DNDocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNDocNo);
                this.columnDNDate = new global::System.Data.DataColumn("DNDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNDate);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnStyle = new global::System.Data.DataColumn("Style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnSizeRange = new global::System.Data.DataColumn("SizeRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeRange);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSellPrice = new global::System.Data.DataColumn("SellPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellPrice);
                this.columnPrintDate = new global::System.Data.DataColumn("PrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDate);
                this.columnMadeFrom = new global::System.Data.DataColumn("MadeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMadeFrom);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryNoteRow NewDeliveryNoteRow() {
                return ((DeliveryNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DeliveryNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DeliveryNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeliveryNoteRowChanged != null)) {
                    this.DeliveryNoteRowChanged(this, new DeliveryNoteRowChangeEvent(((DeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeliveryNoteRowChanging != null)) {
                    this.DeliveryNoteRowChanging(this, new DeliveryNoteRowChangeEvent(((DeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeliveryNoteRowDeleted != null)) {
                    this.DeliveryNoteRowDeleted(this, new DeliveryNoteRowChangeEvent(((DeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeliveryNoteRowDeleting != null)) {
                    this.DeliveryNoteRowDeleting(this, new DeliveryNoteRowChangeEvent(((DeliveryNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeliveryNoteRow(DeliveryNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsShoesBarcodePrinting ds = new dsShoesBarcodePrinting();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeliveryNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderDataTable : global::System.Data.TypedTableBase<PurchaseOrderRow> {
            
            private global::System.Data.DataColumn columnDivison;
            
            private global::System.Data.DataColumn columnPONo;
            
            private global::System.Data.DataColumn columnPODate;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnStyle;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnSizeRange;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSellPrice;
            
            private global::System.Data.DataColumn columnPrintDate;

            private global::System.Data.DataColumn columnMadeFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDataTable() {
                this.TableName = "PurchaseOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisonColumn {
                get {
                    return this.columnDivison;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONoColumn {
                get {
                    return this.columnPONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODateColumn {
                get {
                    return this.columnPODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StyleColumn {
                get {
                    return this.columnStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeRangeColumn {
                get {
                    return this.columnSizeRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellPriceColumn {
                get {
                    return this.columnSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateColumn {
                get {
                    return this.columnPrintDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MadeFromColumn
            {
                get
                {
                    return this.columnMadeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow this[int index] {
                get {
                    return ((PurchaseOrderRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanging;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanged;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleting;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow AddPurchaseOrderRow(string Divison, string PONo, System.DateTime PODate, string ItemCode, string ItemName, string Brand, string Style, string Color, string Size, string SizeRange, string Qty, string SellPrice, System.DateTime PrintDate,string MadeFrom) {
                PurchaseOrderRow rowPurchaseOrderRow = ((PurchaseOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Divison,
                        PONo,
                        PODate,
                        ItemCode,
                        ItemName,
                        Brand,
                        Style,
                        Color,
                        Size,
                        SizeRange,
                        Qty,
                        SellPrice,
                        PrintDate,
                        MadeFrom};
                rowPurchaseOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseOrderRow);
                return rowPurchaseOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseOrderDataTable cln = ((PurchaseOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDivison = base.Columns["Divison"];
                this.columnPONo = base.Columns["PONo"];
                this.columnPODate = base.Columns["PODate"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnBrand = base.Columns["Brand"];
                this.columnStyle = base.Columns["Style"];
                this.columnColor = base.Columns["Color"];
                this.columnSize = base.Columns["Size"];
                this.columnSizeRange = base.Columns["SizeRange"];
                this.columnQty = base.Columns["Qty"];
                this.columnSellPrice = base.Columns["SellPrice"];
                this.columnPrintDate = base.Columns["PrintDate"];
                this.columnMadeFrom = base.Columns["MadeFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDivison = new global::System.Data.DataColumn("Divison", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivison);
                this.columnPONo = new global::System.Data.DataColumn("PONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONo);
                this.columnPODate = new global::System.Data.DataColumn("PODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODate);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnStyle = new global::System.Data.DataColumn("Style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnSizeRange = new global::System.Data.DataColumn("SizeRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeRange);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSellPrice = new global::System.Data.DataColumn("SellPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellPrice);
                this.columnPrintDate = new global::System.Data.DataColumn("PrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDate);
                this.columnMadeFrom = new global::System.Data.DataColumn("MadeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMadeFrom);
                this.columnDivison.Caption = "DNDocNo";
                this.columnPONo.Caption = "DNDate";
                this.columnPODate.Caption = "Division";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow NewPurchaseOrderRow() {
                return ((PurchaseOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderRowChanged != null)) {
                    this.PurchaseOrderRowChanged(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderRowChanging != null)) {
                    this.PurchaseOrderRowChanging(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderRowDeleted != null)) {
                    this.PurchaseOrderRowDeleted(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderRowDeleting != null)) {
                    this.PurchaseOrderRowDeleting(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsShoesBarcodePrinting ds = new dsShoesBarcodePrinting();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GRNDataTable : global::System.Data.TypedTableBase<GRNRow> {
            
            private global::System.Data.DataColumn columnGRNDocNo;
            
            private global::System.Data.DataColumn columnGRNDate;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnStyle;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnSizeRange;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSellPrice;
            
            private global::System.Data.DataColumn columnPrintDate;

            private global::System.Data.DataColumn columnMadeFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRNDataTable() {
                this.TableName = "GRN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GRNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRNDocNoColumn {
                get {
                    return this.columnGRNDocNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRNDateColumn {
                get {
                    return this.columnGRNDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StyleColumn {
                get {
                    return this.columnStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeRangeColumn {
                get {
                    return this.columnSizeRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellPriceColumn {
                get {
                    return this.columnSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintDateColumn {
                get {
                    return this.columnPrintDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MadeFromColumn
            {
                get
                {
                    return this.columnMadeFrom;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRNRow this[int index] {
                get {
                    return ((GRNRow)(this.Rows[index]));
                }
            }
            
            public event GRNRowChangeEventHandler GRNRowChanging;
            
            public event GRNRowChangeEventHandler GRNRowChanged;
            
            public event GRNRowChangeEventHandler GRNRowDeleting;
            
            public event GRNRowChangeEventHandler GRNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGRNRow(GRNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRNRow AddGRNRow(string GRNDocNo, System.DateTime GRNDate, string ItemCode, string ItemName, string Brand, string Style, string Color, string Size, string SizeRange, string Qty, string SellPrice, System.DateTime PrintDate,string MadeFrom) {
                GRNRow rowGRNRow = ((GRNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GRNDocNo,
                        GRNDate,
                        ItemCode,
                        ItemName,
                        Brand,
                        Style,
                        Color,
                        Size,
                        SizeRange,
                        Qty,
                        SellPrice,
                        PrintDate,
                        MadeFrom};
                rowGRNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGRNRow);
                return rowGRNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GRNDataTable cln = ((GRNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GRNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGRNDocNo = base.Columns["GRNDocNo"];
                this.columnGRNDate = base.Columns["GRNDate"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnBrand = base.Columns["Brand"];
                this.columnStyle = base.Columns["Style"];
                this.columnColor = base.Columns["Color"];
                this.columnSize = base.Columns["Size"];
                this.columnSizeRange = base.Columns["SizeRange"];
                this.columnQty = base.Columns["Qty"];
                this.columnSellPrice = base.Columns["SellPrice"];
                this.columnPrintDate = base.Columns["PrintDate"];
                this.columnMadeFrom = base.Columns["MadeFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGRNDocNo = new global::System.Data.DataColumn("GRNDocNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRNDocNo);
                this.columnGRNDate = new global::System.Data.DataColumn("GRNDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRNDate);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnStyle = new global::System.Data.DataColumn("Style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnSizeRange = new global::System.Data.DataColumn("SizeRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeRange);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSellPrice = new global::System.Data.DataColumn("SellPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellPrice);
                this.columnPrintDate = new global::System.Data.DataColumn("PrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintDate);
                this.columnMadeFrom = new global::System.Data.DataColumn("MadeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMadeFrom);
                this.columnGRNDocNo.Caption = "DNDate";
                this.columnGRNDate.Caption = "Division";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRNRow NewGRNRow() {
                return ((GRNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GRNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GRNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GRNRowChanged != null)) {
                    this.GRNRowChanged(this, new GRNRowChangeEvent(((GRNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GRNRowChanging != null)) {
                    this.GRNRowChanging(this, new GRNRowChangeEvent(((GRNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GRNRowDeleted != null)) {
                    this.GRNRowDeleted(this, new GRNRowChangeEvent(((GRNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GRNRowDeleting != null)) {
                    this.GRNRowDeleting(this, new GRNRowChangeEvent(((GRNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGRNRow(GRNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsShoesBarcodePrinting ds = new dsShoesBarcodePrinting();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GRNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemDetailDataTable : global::System.Data.TypedTableBase<ItemDetailRow> {
            
            private global::System.Data.DataColumn columnDivision;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnStyle;
            
            private global::System.Data.DataColumn columnColor;
            
            private global::System.Data.DataColumn columnSize;
            
            private global::System.Data.DataColumn columnSizeRange;
            
            private global::System.Data.DataColumn columnDocumentNo;
            
            private global::System.Data.DataColumn columnProdCode;
            
            private global::System.Data.DataColumn columnStatusDoc;
            
            private global::System.Data.DataColumn columnBarcode;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnIsPrinted;
            
            private global::System.Data.DataColumn columnSellPrice;
            
            private global::System.Data.DataColumn columnItemStatus;
            
            private global::System.Data.DataColumn columnItemType;

            private global::System.Data.DataColumn columnMadeFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailDataTable() {
                this.TableName = "ItemDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivisionColumn {
                get {
                    return this.columnDivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StyleColumn {
                get {
                    return this.columnStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorColumn {
                get {
                    return this.columnColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeColumn {
                get {
                    return this.columnSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SizeRangeColumn {
                get {
                    return this.columnSizeRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentNoColumn {
                get {
                    return this.columnDocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProdCodeColumn {
                get {
                    return this.columnProdCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusDocColumn {
                get {
                    return this.columnStatusDoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BarcodeColumn {
                get {
                    return this.columnBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsPrintedColumn {
                get {
                    return this.columnIsPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SellPriceColumn {
                get {
                    return this.columnSellPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemStatusColumn {
                get {
                    return this.columnItemStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemTypeColumn {
                get {
                    return this.columnItemType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MadeFromColumn
            {
                get
                {
                    return this.columnMadeFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailRow this[int index] {
                get {
                    return ((ItemDetailRow)(this.Rows[index]));
                }
            }
            
            public event ItemDetailRowChangeEventHandler ItemDetailRowChanging;
            
            public event ItemDetailRowChangeEventHandler ItemDetailRowChanged;
            
            public event ItemDetailRowChangeEventHandler ItemDetailRowDeleting;
            
            public event ItemDetailRowChangeEventHandler ItemDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemDetailRow(ItemDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailRow AddItemDetailRow(
                        string Division, 
                        string ItemCode, 
                        string ItemName, 
                        string Brand, 
                        string Style, 
                        string Color, 
                        string Size, 
                        string SizeRange, 
                        string DocumentNo, 
                        string ProdCode, 
                        string StatusDoc, 
                        string Barcode, 
                        decimal Quantity, 
                        bool IsPrinted, 
                        string SellPrice, 
                        string ItemStatus, 
                        string ItemType,
                        string MadeFrom) {
                ItemDetailRow rowItemDetailRow = ((ItemDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Division,
                        ItemCode,
                        ItemName,
                        Brand,
                        Style,
                        Color,
                        Size,
                        SizeRange,
                        DocumentNo,
                        ProdCode,
                        StatusDoc,
                        Barcode,
                        Quantity,
                        IsPrinted,
                        SellPrice,
                        ItemStatus,
                        ItemType,
                        MadeFrom};
                rowItemDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemDetailRow);
                return rowItemDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemDetailDataTable cln = ((ItemDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDivision = base.Columns["Division"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnBrand = base.Columns["Brand"];
                this.columnStyle = base.Columns["Style"];
                this.columnColor = base.Columns["Color"];
                this.columnSize = base.Columns["Size"];
                this.columnSizeRange = base.Columns["SizeRange"];
                this.columnDocumentNo = base.Columns["DocumentNo"];
                this.columnProdCode = base.Columns["ProdCode"];
                this.columnStatusDoc = base.Columns["StatusDoc"];
                this.columnBarcode = base.Columns["Barcode"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnIsPrinted = base.Columns["IsPrinted"];
                this.columnSellPrice = base.Columns["SellPrice"];
                this.columnItemStatus = base.Columns["ItemStatus"];
                this.columnItemType = base.Columns["ItemType"];
                this.columnMadeFrom = base.Columns["MadeFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDivision = new global::System.Data.DataColumn("Division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivision);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnStyle = new global::System.Data.DataColumn("Style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStyle);
                this.columnColor = new global::System.Data.DataColumn("Color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColor);
                this.columnSize = new global::System.Data.DataColumn("Size", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnSizeRange = new global::System.Data.DataColumn("SizeRange", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSizeRange);
                this.columnDocumentNo = new global::System.Data.DataColumn("DocumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentNo);
                this.columnProdCode = new global::System.Data.DataColumn("ProdCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProdCode);
                this.columnStatusDoc = new global::System.Data.DataColumn("StatusDoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusDoc);
                this.columnBarcode = new global::System.Data.DataColumn("Barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnIsPrinted = new global::System.Data.DataColumn("IsPrinted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPrinted);
                this.columnSellPrice = new global::System.Data.DataColumn("SellPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellPrice);
                this.columnItemStatus = new global::System.Data.DataColumn("ItemStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemStatus);
                this.columnItemType = new global::System.Data.DataColumn("ItemType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemType);
                this.columnMadeFrom = new global::System.Data.DataColumn("MadeFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMadeFrom);
                this.columnDocumentNo.Caption = "ProdCode";
                this.columnQuantity.DefaultValue = ((decimal)(1m));
                this.columnIsPrinted.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailRow NewItemDetailRow() {
                return ((ItemDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemDetailRowChanged != null)) {
                    this.ItemDetailRowChanged(this, new ItemDetailRowChangeEvent(((ItemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemDetailRowChanging != null)) {
                    this.ItemDetailRowChanging(this, new ItemDetailRowChangeEvent(((ItemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemDetailRowDeleted != null)) {
                    this.ItemDetailRowDeleted(this, new ItemDetailRowChangeEvent(((ItemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemDetailRowDeleting != null)) {
                    this.ItemDetailRowDeleting(this, new ItemDetailRowChangeEvent(((ItemDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemDetailRow(ItemDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsShoesBarcodePrinting ds = new dsShoesBarcodePrinting();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemMasterRow : global::System.Data.DataRow {
            
            private ItemMasterDataTable tableItemMaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemMasterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemMaster = ((ItemMasterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Division {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.DivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Style {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.StyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.StyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeRange {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.SizeRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeRange\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.SizeRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellPrice {
                get {
                    try {
                        return ((string)(this[this.tableItemMaster.SellPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellPrice\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.SellPriceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MadeFrom
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableItemMaster.MadeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MadeFrom\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableItemMaster.MadeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemMaster.PrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintDate\' in table \'ItemMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemMaster.PrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNull() {
                return this.IsNull(this.tableItemMaster.DivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNull() {
                this[this.tableItemMaster.DivisionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMadeFromNull()
            {
                return this.IsNull(this.tableItemMaster.MadeFromColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMadeFromNull()
            {
                this[this.tableItemMaster.MadeFromColumn] = global::System.Convert.DBNull;
            }
           
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableItemMaster.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableItemMaster.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemMaster.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemMaster.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableItemMaster.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableItemMaster.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyleNull() {
                return this.IsNull(this.tableItemMaster.StyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyleNull() {
                this[this.tableItemMaster.StyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorNull() {
                return this.IsNull(this.tableItemMaster.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorNull() {
                this[this.tableItemMaster.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeNull() {
                return this.IsNull(this.tableItemMaster.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeNull() {
                this[this.tableItemMaster.SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeRangeNull() {
                return this.IsNull(this.tableItemMaster.SizeRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeRangeNull() {
                this[this.tableItemMaster.SizeRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellPriceNull() {
                return this.IsNull(this.tableItemMaster.SellPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellPriceNull() {
                this[this.tableItemMaster.SellPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateNull() {
                return this.IsNull(this.tableItemMaster.PrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateNull() {
                this[this.tableItemMaster.PrintDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeliveryNoteRow : global::System.Data.DataRow {
            
            private DeliveryNoteDataTable tableDeliveryNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeliveryNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeliveryNote = ((DeliveryNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DNDocNo {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.DNDocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNDocNo\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.DNDocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DNDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryNote.DNDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNDate\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.DNDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Style {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.StyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.StyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeRange {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.SizeRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeRange\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.SizeRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellPrice {
                get {
                    try {
                        return ((string)(this[this.tableDeliveryNote.SellPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellPrice\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.SellPriceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MadeFrom
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDeliveryNote.MadeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MadeFrom\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDeliveryNote.MadeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDeliveryNote.PrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintDate\' in table \'DeliveryNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDeliveryNote.PrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNDocNoNull() {
                return this.IsNull(this.tableDeliveryNote.DNDocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNDocNoNull() {
                this[this.tableDeliveryNote.DNDocNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNDateNull() {
                return this.IsNull(this.tableDeliveryNote.DNDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNDateNull() {
                this[this.tableDeliveryNote.DNDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableDeliveryNote.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableDeliveryNote.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableDeliveryNote.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableDeliveryNote.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableDeliveryNote.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableDeliveryNote.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyleNull() {
                return this.IsNull(this.tableDeliveryNote.StyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyleNull() {
                this[this.tableDeliveryNote.StyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorNull() {
                return this.IsNull(this.tableDeliveryNote.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorNull() {
                this[this.tableDeliveryNote.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeNull() {
                return this.IsNull(this.tableDeliveryNote.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeNull() {
                this[this.tableDeliveryNote.SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeRangeNull() {
                return this.IsNull(this.tableDeliveryNote.SizeRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeRangeNull() {
                this[this.tableDeliveryNote.SizeRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableDeliveryNote.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableDeliveryNote.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellPriceNull() {
                return this.IsNull(this.tableDeliveryNote.SellPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellPriceNull() {
                this[this.tableDeliveryNote.SellPriceColumn] = global::System.Convert.DBNull;
            }


            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMadeFromNull()
            {
                return this.IsNull(this.tableDeliveryNote.MadeFromColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMadeFromNull()
            {
                this[this.tableDeliveryNote.MadeFromColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateNull() {
                return this.IsNull(this.tableDeliveryNote.PrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateNull() {
                this[this.tableDeliveryNote.PrintDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderRow : global::System.Data.DataRow {
            
            private PurchaseOrderDataTable tablePurchaseOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrder = ((PurchaseOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Divison {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.DivisonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Divison\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DivisonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.PONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.PODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Style {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.StyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.StyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeRange {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.SizeRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeRange\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.SizeRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellPrice {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.SellPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellPrice\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.SellPriceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MadeFrom
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tablePurchaseOrder.MadeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MadeFrom\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tablePurchaseOrder.MadeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.PrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintDate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisonNull() {
                return this.IsNull(this.tablePurchaseOrder.DivisonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisonNull() {
                this[this.tablePurchaseOrder.DivisonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONoNull() {
                return this.IsNull(this.tablePurchaseOrder.PONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONoNull() {
                this[this.tablePurchaseOrder.PONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODateNull() {
                return this.IsNull(this.tablePurchaseOrder.PODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODateNull() {
                this[this.tablePurchaseOrder.PODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tablePurchaseOrder.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tablePurchaseOrder.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tablePurchaseOrder.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tablePurchaseOrder.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tablePurchaseOrder.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tablePurchaseOrder.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyleNull() {
                return this.IsNull(this.tablePurchaseOrder.StyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyleNull() {
                this[this.tablePurchaseOrder.StyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorNull() {
                return this.IsNull(this.tablePurchaseOrder.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorNull() {
                this[this.tablePurchaseOrder.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeNull() {
                return this.IsNull(this.tablePurchaseOrder.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeNull() {
                this[this.tablePurchaseOrder.SizeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMadeFromNull()
            {
                return this.IsNull(this.tablePurchaseOrder.MadeFromColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMadeFromNull()
            {
                this[this.tablePurchaseOrder.MadeFromColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeRangeNull() {
                return this.IsNull(this.tablePurchaseOrder.SizeRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeRangeNull() {
                this[this.tablePurchaseOrder.SizeRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablePurchaseOrder.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablePurchaseOrder.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellPriceNull() {
                return this.IsNull(this.tablePurchaseOrder.SellPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellPriceNull() {
                this[this.tablePurchaseOrder.SellPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateNull() {
                return this.IsNull(this.tablePurchaseOrder.PrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateNull() {
                this[this.tablePurchaseOrder.PrintDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GRNRow : global::System.Data.DataRow {
            
            private GRNDataTable tableGRN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GRNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGRN = ((GRNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRNDocNo {
                get {
                    try {
                        return ((string)(this[this.tableGRN.GRNDocNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRNDocNo\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.GRNDocNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime GRNDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGRN.GRNDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRNDate\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.GRNDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableGRN.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableGRN.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableGRN.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Style {
                get {
                    try {
                        return ((string)(this[this.tableGRN.StyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.StyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tableGRN.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size {
                get {
                    try {
                        return ((string)(this[this.tableGRN.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeRange {
                get {
                    try {
                        return ((string)(this[this.tableGRN.SizeRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeRange\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.SizeRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableGRN.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellPrice {
                get {
                    try {
                        return ((string)(this[this.tableGRN.SellPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellPrice\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.SellPriceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MadeFrom
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableGRN.MadeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MadeFrom\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableGRN.MadeFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGRN.PrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintDate\' in table \'GRN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGRN.PrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRNDocNoNull() {
                return this.IsNull(this.tableGRN.GRNDocNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRNDocNoNull() {
                this[this.tableGRN.GRNDocNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRNDateNull() {
                return this.IsNull(this.tableGRN.GRNDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRNDateNull() {
                this[this.tableGRN.GRNDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableGRN.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableGRN.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableGRN.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableGRN.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableGRN.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableGRN.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyleNull() {
                return this.IsNull(this.tableGRN.StyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyleNull() {
                this[this.tableGRN.StyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorNull() {
                return this.IsNull(this.tableGRN.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorNull() {
                this[this.tableGRN.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeNull() {
                return this.IsNull(this.tableGRN.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeNull() {
                this[this.tableGRN.SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeRangeNull() {
                return this.IsNull(this.tableGRN.SizeRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeRangeNull() {
                this[this.tableGRN.SizeRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableGRN.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableGRN.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellPriceNull() {
                return this.IsNull(this.tableGRN.SellPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellPriceNull() {
                this[this.tableGRN.SellPriceColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMadeFromNull()
            {
                return this.IsNull(this.tableGRN.MadeFromColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMadeFromNull()
            {
                this[this.tableGRN.MadeFromColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintDateNull() {
                return this.IsNull(this.tableGRN.PrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintDateNull() {
                this[this.tableGRN.PrintDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemDetailRow : global::System.Data.DataRow {
            
            private ItemDetailDataTable tableItemDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemDetail = ((ItemDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Division {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.DivisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Division\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.DivisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Style {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.StyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Style\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.StyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Color {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.ColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Color\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.ColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Size\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SizeRange {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.SizeRangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SizeRange\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.SizeRangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocumentNo {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.DocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentNo\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.DocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProdCode {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.ProdCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProdCode\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.ProdCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusDoc {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.StatusDocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusDoc\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.StatusDocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Barcode {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.BarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.BarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableItemDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrinted {
                get {
                    try {
                        return ((bool)(this[this.tableItemDetail.IsPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPrinted\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.IsPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SellPrice {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.SellPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellPrice\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.SellPriceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MadeFrom
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableItemDetail.MadeFromColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MadeFrom\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableItemDetail.MadeFromColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemStatus {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.ItemStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemStatus\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.ItemStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemType {
                get {
                    try {
                        return ((string)(this[this.tableItemDetail.ItemTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemType\' in table \'ItemDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetail.ItemTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivisionNull() {
                return this.IsNull(this.tableItemDetail.DivisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivisionNull() {
                this[this.tableItemDetail.DivisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableItemDetail.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableItemDetail.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemDetail.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemDetail.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableItemDetail.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableItemDetail.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStyleNull() {
                return this.IsNull(this.tableItemDetail.StyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStyleNull() {
                this[this.tableItemDetail.StyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorNull() {
                return this.IsNull(this.tableItemDetail.ColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorNull() {
                this[this.tableItemDetail.ColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeNull() {
                return this.IsNull(this.tableItemDetail.SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeNull() {
                this[this.tableItemDetail.SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSizeRangeNull() {
                return this.IsNull(this.tableItemDetail.SizeRangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSizeRangeNull() {
                this[this.tableItemDetail.SizeRangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentNoNull() {
                return this.IsNull(this.tableItemDetail.DocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentNoNull() {
                this[this.tableItemDetail.DocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProdCodeNull() {
                return this.IsNull(this.tableItemDetail.ProdCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProdCodeNull() {
                this[this.tableItemDetail.ProdCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusDocNull() {
                return this.IsNull(this.tableItemDetail.StatusDocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusDocNull() {
                this[this.tableItemDetail.StatusDocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBarcodeNull() {
                return this.IsNull(this.tableItemDetail.BarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBarcodeNull() {
                this[this.tableItemDetail.BarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableItemDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableItemDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsPrintedNull() {
                return this.IsNull(this.tableItemDetail.IsPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsPrintedNull() {
                this[this.tableItemDetail.IsPrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSellPriceNull() {
                return this.IsNull(this.tableItemDetail.SellPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSellPriceNull() {
                this[this.tableItemDetail.SellPriceColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMadeFromNull()
            {
                return this.IsNull(this.tableItemDetail.MadeFromColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMadeFromNull()
            {
                this[this.tableItemDetail.MadeFromColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemStatusNull() {
                return this.IsNull(this.tableItemDetail.ItemStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemStatusNull() {
                this[this.tableItemDetail.ItemStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemTypeNull() {
                return this.IsNull(this.tableItemDetail.ItemTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemTypeNull() {
                this[this.tableItemDetail.ItemTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemMasterRowChangeEvent : global::System.EventArgs {
            
            private ItemMasterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemMasterRowChangeEvent(ItemMasterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeliveryNoteRowChangeEvent : global::System.EventArgs {
            
            private DeliveryNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryNoteRowChangeEvent(DeliveryNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeliveryNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderRowChangeEvent : global::System.EventArgs {
            
            private PurchaseOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRowChangeEvent(PurchaseOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GRNRowChangeEvent : global::System.EventArgs {
            
            private GRNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRNRowChangeEvent(GRNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GRNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemDetailRowChangeEvent : global::System.EventArgs {
            
            private ItemDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailRowChangeEvent(ItemDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591